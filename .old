# gpg --recv '4AA4767BBC9C4B1D18AE28B77F2D434B9741E8AC'
	# gpg --verify "archlinux-$version-x86_64.iso.sig" "archlinux-$version-x86_64.iso"
# -blockdev driver=file,node-name=usbuwu,filename=data/usb.raw \
# -device=fff,drive=usbuwu \
# -runas "$(whoami)" \
# set -x
# sudo guestfish <<-EOF
# 	add "image.qcow2"
# 	run
# EOF
# set +x
# [ "$(blkid -o value -s TYPE "$loopDevice")" == vfat ] || {
# helpers
# get_loop_device() {
# 	[[ -f $1 ]] || die 'file for $1 in get_loop_device must exist'

# 	if [[ -z $(losetup -j "$1") ]]; then
# 		losetup -fL --show "$1"
# 	else
# 		losetup -j "$1" | cut -d: -f-1
# 	fi
# }

# trap exit2 SIGALRM
# exit2() {
# 	# shellcheck disable=SC2046
# 	kill $(jobs -p)
# 	exit 1
# }
# coproc {
	# 	while IFS= read -r line; do
	# 		echo "sent text: '$line'"
	# 		if [[ $line = "post-boot-1.sh: DONE" ]]; then
	# 			echo 'DONE THING'
	# 		fi
	# 	done < <(tail -F ./shared/con)
	# } &

# su --login --shell "$(command -v bash)" --command '{
# 	DEV= /shared/dots-bootstrap/pre-bootstrap.sh

# 	echo "START SHELL"
# 	"$(command -v bash)"
# }' "$user"
